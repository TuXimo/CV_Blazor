@implements IDisposable
@using System.Timers;
@using CV_Blazor.Models;

<div class="card project-card"
     @onmouseenter="MouseEnter"
     @onmouseleave="MouseLeave">

    <div class="project-image-container">
        <img src="@currentImage" class="card-img-top" alt="@Project.Title" />
    </div>

    <div class="card-body">
        <h5 class="card-title">@Project.Title</h5>
        <p class="card-text">@Project.ShortDescription</p>
        <a href="@Project.ProjectLink" class="btn btn-primary" target="_blank">View Project</a>
        @if (!string.IsNullOrEmpty(Project.GithubLink))
        {
            <a href="@Project.GithubLink" class="btn btn-dark ms-2" target="_blank">GitHub</a>
        }
    </div>
</div>

@code {
    [Parameter] public Project Project { get; set; }

    private string currentImage;
    private int currentIndex = 0;
    private Timer slideshowTimer;

    protected override void OnInitialized()
    {
        currentImage = Project.MainImage;
    }

    private void MouseEnter()
    {
        if (Project.SecondaryImages == null || Project.SecondaryImages.Count == 0)
            return;

        currentIndex = -1;

        // Mostrar la primera imagen secundaria de inmediato
        ShowNextImage();

        // Iniciar el slideshow
        slideshowTimer = new Timer(1500); // cada 1.5s
        slideshowTimer.Elapsed += (s, e) =>
        {
            InvokeAsync(() =>
            {
                ShowNextImage();
                StateHasChanged();
            });
        };
        slideshowTimer.Start();
    }

    private void ShowNextImage()
    {
        currentIndex = (currentIndex + 1) % Project.SecondaryImages.Count;
        currentImage = Project.SecondaryImages[currentIndex];
    }

    private void MouseLeave()
    {
        slideshowTimer?.Stop();
        slideshowTimer?.Dispose();
        slideshowTimer = null;

        currentImage = Project.MainImage;
        StateHasChanged();
    }

    public void Dispose()
    {
        slideshowTimer?.Dispose();
    }
}
